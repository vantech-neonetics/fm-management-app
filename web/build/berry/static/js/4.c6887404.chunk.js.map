{"version":3,"file":"static/js/4.c6887404.chunk.js","mappings":"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","sources":["assets/images/icons/shape-avatar.svg","ui-component/SvgColor.js","ui-component/cards/UserCard.js","ui-component/cards/Skeleton/EarningCard.js","views/Dashboard/component/StatisticalLineChartCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","views/Dashboard/component/StatisticalBarChart.js","utils/chart.js","views/Dashboard/index.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgShapeAvatar(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 62,\n    viewBox: \"0 0 144 62\",\n    width: 144,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m111.34 23.88c-10.62-10.46-18.5-23.88-38.74-23.88h-1.2c-20.24 0-28.12 13.42-38.74 23.88-7.72 9.64-19.44 11.74-32.66 12.12v26h144v-26c-13.22-.38-24.94-2.48-32.66-12.12z\",\n    fill: \"#fff\",\n    fillRule: \"evenodd\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgShapeAvatar);\nexport default __webpack_public_path__ + \"static/media/shape-avatar.096ea8015d2d14ba4ce707d949a97823.svg\";\nexport { ForwardRef as ReactComponent };","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\nimport Box from '@mui/material/Box';\n\n// ----------------------------------------------------------------------\n\nconst SvgColor = forwardRef(({ src, sx, ...other }, ref) => (\n  <Box\n    component=\"span\"\n    className=\"svg-color\"\n    ref={ref}\n    sx={{\n      width: 24,\n      height: 24,\n      display: 'inline-block',\n      bgcolor: 'currentColor',\n      mask: `url(${src}) no-repeat center / contain`,\n      WebkitMask: `url(${src}) no-repeat center / contain`,\n      ...sx\n    }}\n    {...other}\n  />\n));\n\nSvgColor.propTypes = {\n  src: PropTypes.string,\n  sx: PropTypes.object\n};\n\nexport default SvgColor;\n","/*\n * UserCard.js\n *\n * This file uses code from the Minimal UI project, available at\n * https://github.com/minimal-ui-kit/material-kit-react/blob/main/src/sections/blog/post-card.jsx\n *\n * Minimal UI is licensed under the MIT License. A copy of the license is included below:\n *\n * MIT License\n *\n * Copyright (c) 2021 Minimal UI (https://minimals.cc/)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { Box, Avatar } from '@mui/material';\nimport { alpha } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport shapeAvatar from 'assets/images/icons/shape-avatar.svg';\nimport coverAvatar from 'assets/images/invite/cover.jpg';\nimport userAvatar from 'assets/images/users/user-round.svg';\nimport SvgColor from 'ui-component/SvgColor';\n\nimport React from 'react';\n\nexport default function UserCard({ children }) {\n  const renderShape = (\n    <SvgColor\n      color=\"paper\"\n      src={shapeAvatar}\n      sx={{\n        width: '100%',\n        height: 62,\n        zIndex: 10,\n        bottom: -26,\n        position: 'absolute',\n        color: 'background.paper'\n      }}\n    />\n  );\n\n  const renderAvatar = (\n    <Avatar\n      src={userAvatar}\n      sx={{\n        zIndex: 11,\n        width: 64,\n        height: 64,\n        position: 'absolute',\n        alignItems: 'center',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        left: 0,\n        right: 0,\n        bottom: (theme) => theme.spacing(-4)\n      }}\n    />\n  );\n\n  const renderCover = (\n    <Box\n      component=\"img\"\n      src={coverAvatar}\n      sx={{\n        top: 0,\n        width: 1,\n        height: 1,\n        objectFit: 'cover',\n        position: 'absolute'\n      }}\n    />\n  );\n\n  return (\n    <Card>\n      <Box\n        sx={{\n          position: 'relative',\n          '&:after': {\n            top: 0,\n            content: \"''\",\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            bgcolor: (theme) => alpha(theme.palette.primary.main, 0.42)\n          },\n          pt: {\n            xs: 'calc(100% / 3)',\n            sm: 'calc(100% / 4.66)'\n          }\n        }}\n      >\n        {renderShape}\n        {renderAvatar}\n        {renderCover}\n      </Box>\n      <Box\n        sx={{\n          p: (theme) => theme.spacing(4, 3, 3, 3)\n        }}\n      >\n        {children}\n      </Box>\n    </Card>\n  );\n}\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// ==============================|| SKELETON - EARNING CARD ||============================== //\n\nconst EarningCard = () => (\n  <Card>\n    <CardContent>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <Grid container justifyContent=\"space-between\">\n            <Grid item>\n              <Skeleton variant=\"rectangular\" width={44} height={44} />\n            </Grid>\n            <Grid item>\n              <Skeleton variant=\"rectangular\" width={34} height={34} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\n        </Grid>\n        <Grid item>\n          <Skeleton variant=\"rectangular\" height={30} />\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n);\n\nexport default EarningCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Grid, Typography } from '@mui/material';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n  ...theme.typography.CardWrapper,\n  color: '#fff',\n  overflow: 'hidden',\n  position: 'relative',\n  '&>div': {\n    position: 'relative',\n    zIndex: 5\n  },\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: theme.palette.primary[800],\n    borderRadius: '50%',\n    zIndex: 1,\n    top: -85,\n    right: -95,\n    [theme.breakpoints.down('sm')]: {\n      top: -105,\n      right: -140\n    }\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    zIndex: 1,\n    width: 210,\n    height: 210,\n    background: theme.palette.primary[800],\n    borderRadius: '50%',\n    top: -125,\n    right: -15,\n    opacity: 0.5,\n    [theme.breakpoints.down('sm')]: {\n      top: -155,\n      right: -70\n    }\n  }\n}));\n\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst StatisticalLineChartCard = ({ isLoading, title, chartData, todayValue }) => {\n  const theme = useTheme();\n\n  return (\n    <>\n      {isLoading ? (\n        <SkeletonTotalOrderCard />\n      ) : (\n        <CardWrapper border={false} content={false}>\n          <Box sx={{ p: 2.25 }}>\n            <Grid>\n              <Grid item sx={{ mb: 0.75 }}>\n                <Grid container alignItems=\"center\">\n                  <Grid item xs={6}>\n                    <Grid container alignItems=\"center\">\n                      <Grid item>\n                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                          {todayValue || '0'}\n                        </Typography>\n                      </Grid>\n                      <Grid item></Grid>\n                      <Grid item xs={12}>\n                        <Typography\n                          sx={{\n                            fontSize: '1rem',\n                            fontWeight: 500,\n                            color: theme.palette.primary[200]\n                          }}\n                        >\n                          {title}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={6}>\n                    {chartData ? (\n                      <Chart {...chartData} />\n                    ) : (\n                      <Typography\n                        sx={{\n                          fontSize: '1rem',\n                          fontWeight: 500,\n                          color: theme.palette.primary[200]\n                        }}\n                      >\n                        无数据\n                      </Typography>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n        </CardWrapper>\n      )}\n    </>\n  );\n};\n\nStatisticalLineChartCard.propTypes = {\n  isLoading: PropTypes.bool,\n  title: PropTypes.string\n};\n\nexport default StatisticalLineChartCard;\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\n\n// ==============================|| SKELETON TOTAL GROWTH BAR CHART ||============================== //\n\nconst TotalGrowthBarChart = () => (\n  <Card>\n    <CardContent>\n      <Grid container spacing={gridSpacing}>\n        <Grid item xs={12}>\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n            <Grid item xs zeroMinWidth>\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <Skeleton variant=\"text\" />\n                </Grid>\n                <Grid item xs={12}>\n                  <Skeleton variant=\"rectangular\" height={20} />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Skeleton variant=\"rectangular\" height={50} width={80} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Skeleton variant=\"rectangular\" height={530} />\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalGrowthBarChart;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Grid, Typography } from '@mui/material';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\nimport { Box } from '@mui/material';\n\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\n\nconst StatisticalBarChart = ({ isLoading, chartDatas }) => {\n  chartData.options.xaxis.categories = chartDatas.xaxis;\n  chartData.series = chartDatas.data;\n\n  return (\n    <>\n      {isLoading ? (\n        <SkeletonTotalGrowthBarChart />\n      ) : (\n        <MainCard>\n          <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n              <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                <Grid item>\n                  <Typography variant=\"h3\">统计</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              {chartData.series ? (\n                <Chart {...chartData} />\n              ) : (\n                <Box\n                  sx={{\n                    minHeight: '490px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Typography variant=\"h3\" color={'#697586'}>\n                    暂无数据\n                  </Typography>\n                </Box>\n              )}\n            </Grid>\n          </Grid>\n        </MainCard>\n      )}\n    </>\n  );\n};\n\nStatisticalBarChart.propTypes = {\n  isLoading: PropTypes.bool\n};\n\nexport default StatisticalBarChart;\n\nconst chartData = {\n  height: 480,\n  type: 'bar',\n  options: {\n    colors: [\n      '#008FFB',\n      '#00E396',\n      '#FEB019',\n      '#FF4560',\n      '#775DD0',\n      '#55efc4',\n      '#81ecec',\n      '#74b9ff',\n      '#a29bfe',\n      '#00b894',\n      '#00cec9',\n      '#0984e3',\n      '#6c5ce7',\n      '#ffeaa7',\n      '#fab1a0',\n      '#ff7675',\n      '#fd79a8',\n      '#fdcb6e',\n      '#e17055',\n      '#d63031',\n      '#e84393'\n    ],\n    chart: {\n      id: 'bar-chart',\n      stacked: true,\n      toolbar: {\n        show: true\n      },\n      zoom: {\n        enabled: true\n      }\n    },\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          legend: {\n            position: 'bottom',\n            offsetX: -10,\n            offsetY: 0\n          }\n        }\n      }\n    ],\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '50%'\n      }\n    },\n    xaxis: {\n      type: 'category',\n      categories: []\n    },\n    legend: {\n      show: true,\n      fontSize: '14px',\n      fontFamily: `'Roboto', sans-serif`,\n      position: 'bottom',\n      offsetX: 20,\n      labels: {\n        useSeriesColors: false\n      },\n      markers: {\n        width: 16,\n        height: 16,\n        radius: 5\n      },\n      itemMargin: {\n        horizontal: 15,\n        vertical: 8\n      }\n    },\n    fill: {\n      type: 'solid'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      show: true\n    },\n    tooltip: {\n      theme: 'dark',\n      fixed: {\n        enabled: false\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val;\n        }\n      },\n      marker: {\n        show: false\n      }\n    }\n  },\n  series: []\n};\n","export function getLastSevenDays() {\n  const dates = [];\n  for (let i = 6; i >= 0; i--) {\n    const d = new Date();\n    d.setDate(d.getDate() - i);\n    const month = '' + (d.getMonth() + 1);\n    const day = '' + d.getDate();\n    const year = d.getFullYear();\n\n    const formattedDate = [year, month.padStart(2, '0'), day.padStart(2, '0')].join('-');\n    dates.push(formattedDate);\n  }\n  return dates;\n}\n\nexport function getTodayDay() {\n  let today = new Date();\n  return today.toISOString().slice(0, 10);\n}\n\nexport function generateChartOptions(data, unit) {\n  const dates = data.map((item) => item.date);\n  const values = data.map((item) => item.value);\n\n  const minDate = dates[0];\n  const maxDate = dates[dates.length - 1];\n\n  const minValue = Math.min(...values);\n  const maxValue = Math.max(...values);\n\n  return {\n    series: [\n      {\n        data: values\n      }\n    ],\n    type: 'line',\n    height: 90,\n    options: {\n      chart: {\n        sparkline: {\n          enabled: true\n        },\n        background: 'transparent'\n      },\n      dataLabels: {\n        enabled: false\n      },\n      colors: ['#fff'],\n      fill: {\n        type: 'solid',\n        opacity: 1\n      },\n      stroke: {\n        curve: 'smooth',\n        width: 3\n      },\n      xaxis: {\n        categories: dates,\n        labels: {\n          show: false\n        },\n        min: minDate,\n        max: maxDate\n      },\n      yaxis: {\n        min: minValue,\n        max: maxValue,\n        labels: {\n          show: false\n        }\n      },\n      tooltip: {\n        theme: 'dark',\n        fixed: {\n          enabled: false\n        },\n        x: {\n          format: 'yyyy-MM-dd'\n        },\n        y: {\n          formatter: function (val) {\n            return val + ` ${unit}`;\n          },\n          title: {\n            formatter: function () {\n              return '';\n            }\n          }\n        },\n        marker: {\n          show: false\n        }\n      }\n    }\n  };\n}\n","import { useEffect, useState } from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { gridSpacing } from 'store/constant';\nimport StatisticalLineChartCard from './component/StatisticalLineChartCard';\nimport StatisticalBarChart from './component/StatisticalBarChart';\nimport { generateChartOptions, getLastSevenDays } from 'utils/chart';\nimport { API } from 'utils/api';\nimport { showError, calculateQuota, renderNumber } from 'utils/common';\nimport UserCard from 'ui-component/cards/UserCard';\n\nconst Dashboard = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [statisticalData, setStatisticalData] = useState([]);\n  const [requestChart, setRequestChart] = useState(null);\n  const [quotaChart, setQuotaChart] = useState(null);\n  const [tokenChart, setTokenChart] = useState(null);\n  const [users, setUsers] = useState([]);\n\n  const userDashboard = async () => {\n    const res = await API.get('/api/user/dashboard');\n    const { success, message, data } = res.data;\n    if (success) {\n      if (data) {\n        let lineData = getLineDataGroup(data);\n        setRequestChart(getLineCardOption(lineData, 'RequestCount'));\n        setQuotaChart(getLineCardOption(lineData, 'Quota'));\n        setTokenChart(getLineCardOption(lineData, 'PromptTokens'));\n        setStatisticalData(getBarDataGroup(data));\n      }\n    } else {\n      showError(message);\n    }\n    setLoading(false);\n  };\n\n  const loadUser = async () => {\n    let res = await API.get(`/api/user/self`);\n    const { success, message, data } = res.data;\n    if (success) {\n      setUsers(data);\n    } else {\n      showError(message);\n    }\n  };\n\n  useEffect(() => {\n    userDashboard();\n    loadUser();\n  }, []);\n\n  return (\n    <Grid container spacing={gridSpacing}>\n      <Grid item xs={12}>\n        <Grid container spacing={gridSpacing}>\n          <Grid item lg={4} xs={12}>\n            <StatisticalLineChartCard\n              isLoading={isLoading}\n              title=\"今日请求量\"\n              chartData={requestChart?.chartData}\n              todayValue={requestChart?.todayValue}\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <StatisticalLineChartCard\n              isLoading={isLoading}\n              title=\"今日消费\"\n              chartData={quotaChart?.chartData}\n              todayValue={quotaChart?.todayValue}\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <StatisticalLineChartCard\n              isLoading={isLoading}\n              title=\"今日 token\"\n              chartData={tokenChart?.chartData}\n              todayValue={tokenChart?.todayValue}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container spacing={gridSpacing}>\n          <Grid item lg={8} xs={12}>\n            <StatisticalBarChart isLoading={isLoading} chartDatas={statisticalData} />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <UserCard>\n              <Grid container spacing={gridSpacing} justifyContent=\"center\" alignItems=\"center\" paddingTop={'20px'}>\n                <Grid item xs={4}>\n                  <Typography variant=\"h4\">余额：</Typography>\n                </Grid>\n                <Grid item xs={8}>\n                  <Typography variant=\"h3\"> {users?.quota ? '$' + calculateQuota(users.quota) : '未知'}</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography variant=\"h4\">已使用：</Typography>\n                </Grid>\n                <Grid item xs={8}>\n                  <Typography variant=\"h3\"> {users?.used_quota ? '$' + calculateQuota(users.used_quota) : '未知'}</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography variant=\"h4\">调用次数：</Typography>\n                </Grid>\n                <Grid item xs={8}>\n                  <Typography variant=\"h3\"> {users?.request_count || '未知'}</Typography>\n                </Grid>\n              </Grid>\n            </UserCard>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nexport default Dashboard;\n\nfunction getLineDataGroup(statisticalData) {\n  let groupedData = statisticalData.reduce((acc, cur) => {\n    if (!acc[cur.Day]) {\n      acc[cur.Day] = {\n        date: cur.Day,\n        RequestCount: 0,\n        Quota: 0,\n        PromptTokens: 0,\n        CompletionTokens: 0\n      };\n    }\n    acc[cur.Day].RequestCount += cur.RequestCount;\n    acc[cur.Day].Quota += cur.Quota;\n    acc[cur.Day].PromptTokens += cur.PromptTokens;\n    acc[cur.Day].CompletionTokens += cur.CompletionTokens;\n    return acc;\n  }, {});\n  let lastSevenDays = getLastSevenDays();\n  return lastSevenDays.map((day) => {\n    if (!groupedData[day]) {\n      return {\n        date: day,\n        RequestCount: 0,\n        Quota: 0,\n        PromptTokens: 0,\n        CompletionTokens: 0\n      };\n    } else {\n      return groupedData[day];\n    }\n  });\n}\n\nfunction getBarDataGroup(data) {\n  const lastSevenDays = getLastSevenDays();\n  const result = [];\n  const map = new Map();\n\n  for (const item of data) {\n    if (!map.has(item.ModelName)) {\n      const newData = { name: item.ModelName, data: new Array(7) };\n      map.set(item.ModelName, newData);\n      result.push(newData);\n    }\n    const index = lastSevenDays.indexOf(item.Day);\n    if (index !== -1) {\n      map.get(item.ModelName).data[index] = calculateQuota(item.Quota, 3);\n    }\n  }\n\n  for (const item of result) {\n    for (let i = 0; i < 7; i++) {\n      if (item.data[i] === undefined) {\n        item.data[i] = 0;\n      }\n    }\n  }\n\n  return { data: result, xaxis: lastSevenDays };\n}\n\nfunction getLineCardOption(lineDataGroup, field) {\n  let todayValue = 0;\n  let chartData = null;\n  const lastItem = lineDataGroup.length - 1;\n  let lineData = lineDataGroup.map((item, index) => {\n    let tmp = {\n      date: item.date,\n      value: item[field]\n    };\n    switch (field) {\n      case 'Quota':\n        tmp.value = calculateQuota(item.Quota, 3);\n        break;\n      case 'PromptTokens':\n        tmp.value += item.CompletionTokens;\n        break;\n    }\n\n    if (index == lastItem) {\n      todayValue = tmp.value;\n    }\n    return tmp;\n  });\n\n  switch (field) {\n    case 'RequestCount':\n      chartData = generateChartOptions(lineData, '次');\n      todayValue = renderNumber(todayValue);\n      break;\n    case 'Quota':\n      chartData = generateChartOptions(lineData, '美元');\n      todayValue = '$' + renderNumber(todayValue);\n      break;\n    case 'PromptTokens':\n      chartData = generateChartOptions(lineData, '');\n      todayValue = renderNumber(todayValue);\n      break;\n  }\n\n  return { chartData: chartData, todayValue: todayValue };\n}\n"],"names":["SvgColor","forwardRef","_ref","ref","src","sx","other","_jsx","Box","component","className","width","height","display","bgcolor","mask","WebkitMask","propTypes","PropTypes","UserCard","children","renderShape","color","shapeAvatar","zIndex","bottom","position","renderAvatar","Avatar","userAvatar","alignItems","marginLeft","marginRight","left","right","theme","spacing","renderCover","coverAvatar","top","objectFit","_jsxs","Card","content","alpha","palette","primary","main","pt","xs","sm","p","EarningCard","CardContent","Grid","container","direction","item","justifyContent","Skeleton","variant","my","CardWrapper","styled","MainCard","typography","overflow","background","borderRadius","breakpoints","down","opacity","_ref2","isLoading","title","chartData","todayValue","useTheme","_Fragment","SkeletonTotalOrderCard","border","mb","Typography","fontSize","fontWeight","mr","mt","Chart","TotalGrowthBarChart","gridSpacing","zeroMinWidth","chartDatas","options","xaxis","categories","series","data","SkeletonTotalGrowthBarChart","minHeight","type","colors","chart","id","stacked","toolbar","show","zoom","enabled","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","horizontal","columnWidth","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","vertical","fill","dataLabels","grid","tooltip","fixed","y","formatter","val","marker","getLastSevenDays","dates","i","d","Date","setDate","getDate","month","getMonth","day","formattedDate","getFullYear","padStart","join","push","generateChartOptions","unit","map","date","values","value","sparkline","stroke","curve","min","max","length","yaxis","Math","x","format","Dashboard","setLoading","useState","statisticalData","setStatisticalData","requestChart","setRequestChart","quotaChart","setQuotaChart","tokenChart","setTokenChart","users","setUsers","userDashboard","async","res","API","get","success","message","lineData","groupedData","reduce","acc","cur","Day","RequestCount","Quota","PromptTokens","CompletionTokens","getLineDataGroup","getLineCardOption","lastSevenDays","result","Map","has","ModelName","newData","name","Array","set","index","indexOf","calculateQuota","undefined","getBarDataGroup","showError","useEffect","loadUser","lg","StatisticalLineChartCard","StatisticalBarChart","paddingTop","quota","used_quota","request_count","lineDataGroup","field","lastItem","tmp","renderNumber"],"sourceRoot":""}